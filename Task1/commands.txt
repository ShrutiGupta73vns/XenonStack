nano internsctl.sh
 chmod +x internsctl.sh

 rint_version() {
    echo "Internsctl v0.1.0"
}

print_help() {
    echo "Usage: internsctl [OPTION]"
    echo "Custom Linux command for interns"
    echo
    echo "Options:"
    echo "  -v, --version     Display version information"
    echo "  -h, --help        Display this help message"
    echo
    echo "Examples:"
    echo "  internsctl -v       Display version information"
    echo "  internsctl --help   Display this help message"
    echo "  More usage examples..."
}


if [ "$1" == "--version" ]; then
    print_version
    exit 0
fi


if [ "$1" == "--help" ]; then
    print_help
    exit 0
fi


 sudo gzip /usr/share/man/man1/internsctl.1
sudo mandb


.TH internsctl 1 "December 2023" "v0.1.0" "Internsctl Manual"
.SH NAME
internsctl \- Custom Linux command for interns

.SH SYNOPSIS
.B internsctl

.SH DESCRIPTION
This command prints the version of internsctl.

.SH OPTIONS
None.

.SH SEE ALSO
More detailed documentation can be found online.

.SH AUTHOR
Your Name <your@email.com>

.SH BUGS
No known bugs.

.SH COPYRIGHT
This is free software; see the source for copying conditions.  There is NO warranty.



task2 EASY


sudo nano /usr/local/bin/internsctl
cpu_getinfo() {
    lscpu
}

if [ "$1" == "cpu" ] && [ "$2" == "getinfo" ]; then
    cpu_getinfo
    exit 0
fi



sudo nano /usr/local/bin/internsctl

memory_getinfo() {
    free
}

if [ "$1" == "memory" ] && [ "$2" == "getinfo" ]; then
    memory_getinfo
    exit 0
fi


task2 intermediate 
# creating a new user

sudo nano /usr/local/bin/internsctl

user_create() {
    username=$1
    sudo adduser --disabled-password --gecos "" $username
}

if [ "$1" == "user" ] && [ "$2" == "create" ]; then
    user_create "$3"
    exit 0
fi

#listing the users



user_list() {
    getent passwd | grep -vE 'nologin|false' | cut -d: -f1
}

if [ "$1" == "user" ] && [ "$2" == "list" ]; then
    user_list
    exit 0
fi


# task2 advanced

print_file_permissions() {
    local file="$1"

    # Check if the file exists
    if [ ! -f "$file" ]; then
        echo "File not found: $file"
        exit 1
    fi

    # Display the file permissions
    stat -c%a "$file"
}

print_file_size() {
    local file="$1"

    # Check if the file exists
    if [ ! -f "$file" ]; then
        echo "File not found: $file"
        exit 1
    fi

    # Display the file size
    stat -c%s "$file"
}

print_file_owner() {
    local file="$1"

    # Check if the file exists
    if [ ! -f "$file" ]; then
        echo "File not found: $file"
        exit 1
    fi

    # Display the file owner
    stat -c%U "$file"
}

print_last_modified() {
    local file="$1"

    # Check if the file exists
    if [ ! -f "$file" ]; then
        echo "File not found: $file"
        exit 1
    fi

    # Display the last modified date
    stat -c%y "$file"
}

print_file_info() {
    local file="$1"

    # Check if the file exists
    if [ ! -f "$file" ]; then
        echo "File not found: $file"
        exit 1
    fi

    # Default output
    output="File: $file\n"
    output+="Access: $(stat -c%a "$file")\n"
    output+="Size(B): $(stat -c%s "$file")\n"
    output+="Owner: $(stat -c%U "$file")\n"
    output+="Modify: $(stat -c%y "$file")\n"

    echo -e "$output"
}

if [ "$1" == "file" ] && [ "$2" == "getinfo" ]; then
    file="$4"

    if [ "$3" == "--permissions" ]; then
        print_file_permissions "$file"
    elif [ "$3" == "--size" ]; then
        print_file_size "$file"
    elif [ "$3" == "--owner" ]; then
        print_file_owner "$file"
    elif [ "$3" == "--last-modified" ]; then
        print_last_modified "$file"
    else
        file="$3"
        print_file_info "$file"
    fi
    exit 0
fi



